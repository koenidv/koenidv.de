---
import Layout from "../layouts/Layout.astro";
import Marquee from "../components/Marquee.astro";
import ProjectCardSmall from "../components/ProjectCardSmall.astro";
import ProjectDialog from "../components/ProjectDialog.astro";
---

<Layout title="Florian König">
	<div class="maingrid">
		<div id="shortinfo" class="h-14 flex flex-row gap-6 m-4 mx-6 justify-center md:justify-start">
			<a class="max-md:hidden" href="https://linkedin.com/in/koenidv" target="_blank"
				>Florian König</a
			>

			<div class="flex flex-row gap-6 opacity-80 items-baseline">
				<a href="#contact-post" class="flex flex-row gap-1 items-center">
					<img
						class="h-4 opacity-75"
						src="https://img.icons8.com/material-rounded/64/marker.png"
						alt="location"
					/>
					<p>Berlin</p>
				</a>
				<a href="https://code.berlin" target="_blank" class="flex flex-row gap-1 items-center">
					<img
						class="h-4 opacity-75"
						src="https://img.icons8.com/material-rounded/64/student-center.png"
						alt="education"
					/>
					<p>CODE University</p>
				</a>
				<a href="https://sanofi.com" target="_blank" class="flex flex-row gap-1 items-center">
					<img
						class="h-4 opacity-75"
						src="https://img.icons8.com/material-rounded/64/business.png"
						alt="work"
					/>
					<p>Sanofi</p>
				</a>
			</div>
		</div>

		<div
			id="links"
			class="h-14 flex flex-row gap-4 md:gap-3 m-4 mx-6 justify-center md:justify-end">
			<a href="#projects">Projects</a>
			<a href="#about">About</a>
			<a href="#contact">Contact</a>
		</div>

		<div id="tagline" class="mx-4 md:mx-8 max-md:my-4 relative">
			<img
				src="/img.jpg"
				class="w-full max-md:-mt-16 max-md:translate-y-6 md:w-[56rem] md:max-w-[80vw] h-48 md:h-[80%] object-cover md:absolute left-[12vw] top-[50%]"
			/>
			<h1
				id="tagline"
				class="relative text-[10vw] md:text-8xl lg:text-[8rem] xl:text-[14vh] text-right md:text-left font-black leading-none tracking-widest uppercase md:mix-blend-difference text-[#ecede7] md:text-white">
				Creative<br />
				Developer
			</h1>
		</div>

		<h1
			id="name"
			class="mx-4 md:mx-8 text-[12vw] md:text-8xl lg:text-[8rem] xl:text-[14vh] text-left md:text-right font-black leading-none tracking-wider uppercase mix-blend-difference text-white md:flex items-end justify-end">
			Florian<br />
			Kønig
		</h1>
	</div>

	<div id="projects">
		<Marquee inverse={false}>
			<p>Android Native</p>
			<p>Web</p>
			<p>Cloud Native</p>
			<p>Hardware Interfaces</p>
			<p>DevOps</p>
			<p>Design</p>
		</Marquee>

		<div
			id="recent-projects"
			class="projectsgrid min-h-[56rem] 2xl:max-h-[92vh] overflow-hidden p-4 md:p-8 max-md:mt-4 xl:px-16 gap-4 xl:gap-8">
			<div
				id="project1"
				class="opendialog group elevated-4 elevated-card-hoverable hover:cursor-pointer"
				data-dialog="dialog1"
				data-origin="project1">
				<div class="border-l-4 border-t-4 border-r-2 border-b-2 border-black h-full w-full">
					<img
						src="/images/melodymates.webp"
						class="w-full aspect-[2] md:aspect-video object-cover md:max-2xl:h-96 border-black border-b-4"
					/>
					<div class="m-8">
						<h2
							class="animateunderline h-12 text-4xl font-poppins font-bold tracking-wider md:mt-4 underline-offset-[0.4rem] decoration-[0.2rem]">
							MelodyMates
						</h2>
						<p class="mt-2">
							MelodyMates is a social network for young music lovers.<br />
							Sign up with Spotify, share the songs you love, and discover what your friends are recommending.<br
							/>
						</p>
						<div class="mt-4 md:mt-8 flex flex-wrap gap-2">
							<span class="bg-[#e0e2d8] rounded-sm px-2">Fauna</span>
							<span class="bg-[#e0e2d8] rounded-sm px-2">Deno</span>
							<span class="bg-[#e0e2d8] rounded-sm px-2">Flutter</span>
							<span class="bg-[#e0e2d8] rounded-sm px-2">SvelteKit</span>
						</div>
					</div>
				</div>
			</div>
			<ProjectDialog title="MelodyMates" image="/images/melodymates.webp" index={1}>
				<p>
					MelodyMates is a social network for young music lovers.<br />
					Sign up with Spotify, share the songs you love, and discover what your friends are recommending.
				</p>
				<p>
					This is a placeholder text for the MelodyMates project, a vibrant social network designed
					exclusively for young music enthusiasts. With a seamless integration with Spotify,
					MelodyMates offers an exhilarating platform where users can sign up using their Spotify
					accounts, share their favorite songs, and explore the musical preferences of their
					friends.
				</p>
				<p>
					Powered by the advanced Fauna database and leveraging the efficient SvelteKit framework,
					MelodyMates ensures a smooth and engaging user experience. The utilization of Google Cloud
					Run functions adds scalability and reliability to the platform, guaranteeing uninterrupted
					access to its wide array of features.
				</p>
				<p>
					MelodyMates enables users to create personalized profiles, showcasing their unique musical
					tastes and preferences. By connecting with friends and fellow music lovers, users can stay
					updated with the latest tracks, albums, and playlists recommended by their network. The
					platform provides a space to engage in lively discussions, exchange opinions, and discover
					hidden gems within the vast world of music.
				</p>
				<p>
					As the project evolves, MelodyMates has plans to extend its reach by developing a mobile
					app using the powerful Flutter framework. This future expansion will allow users to
					seamlessly connect and interact with the MelodyMates community on their mobile devices,
					ensuring an immersive and on-the-go experience.
				</p>
				<p>
					Join MelodyMates today, and unlock a world of music discovery, connection, and shared
					passion for the tunes that make life a little more melodious. Stay tuned for more updates
					as we work towards creating the ultimate platform for music lovers of all kinds.
				</p>
			</ProjectDialog>
			<ProjectCardSmall
				title="Chess:E"
				description="Remote but analog chess system that brings the traditional chess experience to the digital age."
				image="/images/chesse.webp"
				index={2}
				tags={["Hardware", "Deno", "AMQP", "Python", "SvelteKit"]}
			/>
			<ProjectDialog title="Chess:E" image="/images/chesse.webp" index={2}>
				<p>Description to be added.</p>
			</ProjectDialog>
			<ProjectCardSmall
				title="Indicating Helmet"
				description="Rapid prototyping of a bike helmet with turn signals to improve urban safety."
				image="/images/helmet.webp"
				index={3}
				tags={["Hardware", "C"]}
			/>
			<ProjectDialog title="Indicating Helmet" image="/images/helmet.webp" index={3}>
				<p>Description to be added.</p>
			</ProjectDialog>
			<ProjectCardSmall
				title="Schulportal App"
				description="Native Android app for students to manage timetables and homework, chat with teachers, and much more."
				image="/images/sphplanner.webp"
				index={4}
				tags={["600+ Users", "Android", "Kotlin"]}
			/>
			<ProjectDialog title="Schulportal App" image="/images/sphplanner.webp" index={4}>
				<p>Description to be added.</p>
			</ProjectDialog>
			<a href="/projects" id="projectsmore" class="group h-14 w-full flex max-2xl:justify-center">
				<div class="elevated-card-hoverable elevated-3 w-full md:w-[48%] 2xl:w-fit">
					<div
						class="border-l-4 border-t-4 border-r-2 border-b-2 border-black h-full w-full flex items-center justify-center md:px-20">
						<p class="group-hover:underline underline-offset-[0.3rem] decoration-[0.125rem]">
							More Projects
						</p>
					</div>
				</div>
			</a>
		</div>
	</div>

	<div id="about"></div>
	<div id="contact"></div>
</Layout>

<script is:inline>
	const showDialog = (origin, dialog) => {
		origin.style.viewTransitionName = "";
		dialog.showModal();
		origin.classList.add("invisible");
		document.body.style.overflowY = "hidden";
		document.body.style.top = `-${scroll}px`;
		// Disable scrolling: https://css-tricks.com/prevent-page-scrolling-when-a-modal-is-open/
	};

	document.querySelectorAll(".opendialog").forEach((e) => {
		const origin = document.getElementById(e.getAttribute("data-origin"));
		const dialog = document.getElementById(e.getAttribute("data-dialog"));

		e.addEventListener("click", () => {
			origin.style.viewTransitionName = "fullembed";
			const scroll = window.scrollY;
			if (!document.startViewTransition) {
				showDialog(origin, dialog);
				return;
			}

			document.startViewTransition(() => {
				showDialog(origin, dialog);
			});
		});
	});

	const hideDialog = (origin, dialog) => {
		origin.style.viewTransitionName = "fullembed";
		dialog.close();
		origin.classList.remove("invisible");
		document.body.style.overflowY = "";
		document.body.style.top = "";
	};

	const handleCloseClicked = async (origin, dialog) => {
		if (!document.startViewTransition) {
			hideDialog(origin, dialog);
			return;
		}

		const transaction = document.startViewTransition(() => {
			hideDialog(origin, dialog);
		});
		await transaction.updateCallbackDone;
		origin.style.viewTransitionName = "";
	};

	document.querySelectorAll(".closedialog").forEach((e) => {
		const origin = document.getElementById(e.getAttribute("data-origin"));
		const dialog = document.getElementById(e.getAttribute("data-dialog"));

		e.addEventListener("mousedown", () => handleCloseClicked(origin, dialog));
		e.addEventListener("touchstart", () => handleCloseClicked(origin, dialog));
	});
</script>
