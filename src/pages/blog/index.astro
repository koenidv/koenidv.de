---
import BlogLayout from "../../layouts/BlogLayout.astro";
import { getCollection } from "astro:content";
import { categoryColors } from "./categoryColors";

export const prerender = true;

const articles = (
	await getCollection(
		"articles",
		({ data }) => data.draft !== true || process.env.NODE_ENV === "development"
	)
).sort((a, b) => b.data.date.getTime() - a.data.date.getTime());
---

<BlogLayout
	title="Florian König's Technology Blog"
	description="Articles on tech and design by Florian König.">
	<div class="max-w-7xl mx-auto md:py-8">
		<h1 class="text-3xl max-sm:text-center md:text-4xl font-black font-poppins tracking-wider mb-8">
			Articles
		</h1>

		<div class="grid gap-8 md:grid-cols-2">
			{
				articles.map((article) => (
					<div class="group flex w-full">
						<a
							class="elevated-card-hoverable elevated w-full hover:cursor-pointer"
							href={`/blog/${article.slug}`}>
							<div class="flex min-h-[12rem] flex-col overflow-hidden border-b-2 border-l-4 border-r-2 border-t-4 border-black p-4">
								{article.data.image && (
									<div class="mb-4 aspect-video overflow-hidden">
										<img
											src={article.data.image}
											alt={article.data.title}
											class="h-full w-full object-cover"
										/>
									</div>
								)}

								<div class="mb-2 flex items-center gap-2">
									{article.data.draft && (
										<span class="rounded-sm border border-rose-200 bg-rose-100 px-3 py-1 text-sm text-rose-800">
											draft
										</span>
									)}
									{article.data.tags.map((tag) => (
										<span
											class={`rounded-sm border px-3 py-1 text-sm ${
												categoryColors[tag]
											}`}>
											{tag}
										</span>
									))}
									<time class="text-sm font-normal text-gray-600">
										{article.data.date.toLocaleDateString("en-US", {
											year: "numeric",
											month: "long"
										})}
									</time>
								</div>

								<h2 class="mb-2 font-mono text-2xl font-bold tracking-wide group-hover:text-purple-600">
									{article.data.title}
								</h2>

								<p class="line-clamp-3 text-sm font-medium text-gray-600">
									{article.data.description}
								</p>
							</div>
						</a>
					</div>
				))
			}
		</div>

		{
			articles.length === 0 && (
				<div class="py-12 text-center">
					<p class="font-mono text-gray-500">No articles published yet.</p>
				</div>
			)
		}
	</div>
</BlogLayout>
