---
import NameInline from "../../components/InlineSVGs/NameInline.astro";
import NameLeft from "../../components/InlineSVGs/NameLeft.astro";
import ProjectsInline from "../../components/InlineSVGs/ProjectsInline.astro";
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";

const projects = (await getCollection("projects")).sort(
	(a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

function colorForTags(tags: string[]) {
		if (tags.includes("Jekyll")) return "#9ea1d4"
		else if (tags.includes("Web")) return "#f1f7b5"
		else if (tags.includes("Android Native")) return "#a8d1d1"
		else if (tags.includes("Hardware")) return "#fd8a8a"
		else if (tags.includes("Unity")) return "#ffad7e"
		else return "#ecede7"
	}
---

<Layout title="Projects by Florian KÃ¶nig">
	<div class="flex flex-col p-4 pt-8 gap-4 items-baseline lg:justify-between lg:flex-row-reverse">
			
		<ProjectsInline class="max-md:w-full"/>

		<a href="/" class="group">
				<NameInline class="max-md:w-full"/>
		</a>
	</div>
	<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 auto-rows-fr gap-4 p-4">
		{
			projects.map((project) => (
				<div class="group flex">
					<a class="elevated-card-hoverable elevated-1 lg:elevated-2 group hover:cursor-pointer flex-grow" href={project.data.link} target="_blank" style={`background-color: ${project.data.color || colorForTags(project.data.tags)};`}>
						<div class="flex h-full w-full flex-col overflow-hidden border-b-2 border-l-4 border-r-2 border-t-4 border-black">
							{project.data.image && (
								<img
									srcset={
										project.data.image.startsWith("http") ? undefined : `
											/images/200/${project.data.image} 200w,
											/images/400/${project.data.image} 400w,
											/images/800/${project.data.image} 800w,
											/images/1200/${project.data.image} 1200w`
									}
									sizes={
										project.data.image.startsWith("http") ? undefined : `
											(max-width: 450px) 200px,
											(max-width: 850px) 400px,
											(max-width: 1250px) 800px,
											1200px`
									}
									src={project.data.image.startsWith("http") ? project.data.image : `/images/1200/${project.data.image}`}
									loading="lazy"
									alt={`Cover image for ${project.data.title}`}
									class="aspect-[3] w-full border-b-4 border-black object-cover"
								/>
							)}
							<div class="m-8 flex flex-col md:mt-6">
								<h2 class="animateunderline font-poppins text-4xl font-bold tracking-wider decoration-[0.2rem] underline-offset-[0.4rem]">
									{project.data.title}
								</h2>
								<p class="mt-2">{project.data.description}</p>
								<div class="mt-4 flex flex-wrap gap-2">
									{project.data.tags.map((tag) => (
										<span class="rounded-sm bg-slate-700 bg-opacity-[15%] px-2">{tag}</span>
									))}
								</div>
							</div>
						</div>
					</a>
				</div>
				))
		}
	</div>
</Layout>